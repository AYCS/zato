zato ca
============================

Overview
------------

Manages a basic Certificate Authority (CA). Note that this is mostly used
to support the :doc:`zato quickstart<./quickstart>` command; it's not a full-blown CA and
there are no plans to make it a substitute for projects that actually provide
full CA environments.

Think of the Zato's CA as an aid in the development phase only. While technically possible,
it shouldn't really be used during tests and in production.

The CA works by running the `openssl <https://openssl.org/>`_ command
in subprocesses against a configuration directory.

Subcommands
------------

* :ref:`zato ca create ca<cli_zato_ca_create_ca>`
* :ref:`zato ca create lb_agent<cli_zato_ca_create_lb_agent>`
* :ref:`zato ca create server<cli_zato_ca_create_server>`
* :ref:`zato ca create web_admin<cli_zato_ca_create_web_admin>`

.. _cli_zato_ca_create_ca:

zato ca create ca
~~~~~~~~~~~~~~~~~

Creates a CA in an empty directory pointed to by *path*. On a successful command execution
the following directory will be created::

    path
    ├── ca-material
    ├── out-cert
    ├── out-csr
    ├── out-priv
    └── out-pub
    
================================================= ========================================================================
Name                                              Description
================================================= ========================================================================
ca-material                                       Stores CA's own configuration, in particular:

                                                  * ca-cert.pem - CA's certificate in PEM
                                                  * ca-certindex - an index of all the certificates issued by this CA
                                                  * ca-key.pem - CA's password-protected private key 
                                                  * ca-password - password to decrypt the private key with, in plain text.
                                                    By default, it's a `UUID4 <https://en.wikipedia.org/wiki/UUID>`_.
out-cert                                          Contains newly generated certificates
out-priv                                          Contains newly generated private keys
out-pub                                           Contains newly generated public keys
================================================= ========================================================================

.. warning:: Newly generated private keys are not password-protected 

   The private keys a CA generates are not password-protected. This is yet another
   reason the CA is consider a development-only tool instead of a full-featured framework
   for the management of a company's digital certificates.
   
.. note:: Default values

   When generating certificates the CA will use default values provided by the
   openssl command unless manually overridden on command line. Please refer to `openssl <https://openssl.org/>`_
   documentation for more information on the default values that will be used.
   
Usage
^^^^^

::

    $ zato update crypto [-h] [--store-log] [--verbose] [--store-config]
        path priv_key_path pub_key_path ca_certs_path cert_path
        
::

    $ zato update crypto ~/zato1/server1/ ~/crypto/zato.server1.priv.pem 
        ~/crypto/zato.server1.pub.pem ~/crypto/ca-cert.pem 
        ~/crypto/zato.server1.cert.pem
    $
                          
Command-specific parameters
^^^^^^^^^^^^^^^^^^^^^^^^^^^

================================================= =======================================================================
Name                                              Description
================================================= =======================================================================
path                                              Path to a Zato component
priv_key_path                                     Path to the component's private key in PEM
pub_key_path                                      Path to the component's public key in PEM
ca_certs_path                                     Path to the bundle of CA certificates the component is to trust, in PEM
cert_path                                         Path to the component's certificate in PEM
================================================= =======================================================================

.. _cli_zato_ca_create_lb_agent:

zato ca create lb_agent
~~~~~~~~~~~~~~~~~~~~~~~

Creates a certificate and a pair of private and public keys for a :doc:`Zato load-balancer's agent<architecture/load-balancer>`.
Files will be stored in following locations, where *path* is the path to the CA used for generating the crypto material.

============== =================================================
Name           Location
============== =================================================
Certificate    path/out-cert/lb-agent-cert-*CURRENT_TIMESTAMP*.pem
Private key    path/out-priv/lb-agent-priv-*CURRENT_TIMESTAMP*.pem
Public key     path/out-pub/lb-agent-pub-*CURRENT_TIMESTAMP*.pem
============== =================================================

Usage
^^^^^

::

    zato ca create lb_agent [-h] [--store-log] [--verbose] [--store-config]
        [--organization ORGANIZATION] [--locality LOCALITY]
        [--state-or-province STATE_OR_PROVINCE] [--country COUNTRY] [--common-name COMMON_NAME]
        path organizational-unit
        
::

    $ zato ca create lb_agent ~/zato1/ca/ zato_lb_agent1
    OK
    $
    
Command-specific parameters
^^^^^^^^^^^^^^^^^^^^^^^^^^^

================================================= ====================================================
Name                                              Description
================================================= ====================================================
--organization                                    Organization name (O), e.g. 'My Company'
--locality                                        Locality name (L), e.g. 'Roma'
--state-or-province                               State or province name, e.g. 'Lazio'
--country                                         Country name (C), e.g. 'Italia'
--common-name                                     Common name (CN), e.g. 'localhost'
path                                              Path to the CA
organizational-unit                               Organizational unit name (OU), e.g. 'zato_lb_agent1'
================================================= ====================================================

.. _cli_zato_ca_create_server:

zato ca create server
~~~~~~~~~~~~~~~~~~~~~

Creates a certificate and a pair of private and public keys for a :doc:`Zato server<architecture/servers>`.
The certificate's organizational unit name (OU) will be in the format of *CLUSTER_NAME:SERVER_NAME*.

Files will be stored in following locations, where *path* is the path to the CA used for generating the crypto material.

============== ==============================================================
Name           Location
============== ==============================================================
Certificate    path/out-cert/*CLUSTER_NAME-SERVER_NAME-CURRENT_TIMESTAMP*.pem
Private key    path/out-priv/*CLUSTER_NAME-SERVER_NAME-CURRENT_TIMESTAMP*.pem
Public key     path/out-pub/*CLUSTER_NAME-SERVER_NAME-CURRENT_TIMESTAMP*.pem
============== ==============================================================

Usage
^^^^^

::

    zato ca create server [-h] [--store-log] [--verbose] [--store-config]
        [--organization ORGANIZATION] [--locality LOCALITY]
        [--state-or-province STATE_OR_PROVINCE] [--country COUNTRY] [--common-name COMMON_NAME]
        path cluster_name server_name
        
::

    $ $ zato ca create server ~/zato1/ca/ dev3 server1
    OK
    $
    
Command-specific parameters
^^^^^^^^^^^^^^^^^^^^^^^^^^^

================================================= =====================================================
Name                                              Description
================================================= =====================================================
--organization                                    Organization name (O), e.g. 'My Company'
--locality                                        Locality name (L), e.g. 'Roma'
--state-or-province                               State or province name, e.g. 'Lazio'
--country                                         Country name (C), e.g. 'Italia'
--common-name                                     Common name (CN), e.g. 'localhost'
path                                              Path to the CA
cluster_name                                      Name of a cluster this server belongs to, e.g. 'dev3'
server_name                                       Name of the server, e.g. 'server1'
================================================= =====================================================

.. _cli_zato_ca_create_web_admin:

zato ca create web_admin
~~~~~~~~~~~~~~~~~~~~~~~~

Creates a certificate and a pair of private and public keys for a :doc:`web admin console<architecture/web-admin>`.

Files will be stored in following locations, where *path* is the path to the CA used for generating the crypto material.

============== ==============================================================
Name           Location
============== ==============================================================
Certificate    path/out-cert/web-admin-cert-*CURRENT_TIMESTAMP*.pem
Private key    path/out-priv/web-admin-priv-*CURRENT_TIMESTAMP*.pem
Public key     path/out-pub/web-admin-pub-*CURRENT_TIMESTAMP*.pem
============== ==============================================================

Usage
^^^^^

::

    zato ca create web_admin [-h] [--store-log] [--verbose] [--store-config]
        [--organization ORGANIZATION] [--locality LOCALITY]
        [--state-or-province STATE_OR_PROVINCE] [--country COUNTRY] [--common-name COMMON_NAME]
        path
        
::

    $ zato ca create web_admin ~/zato1/ca/
    OK
    $
    
Command-specific parameters
^^^^^^^^^^^^^^^^^^^^^^^^^^^

================================================= =====================================================
Name                                              Description
================================================= =====================================================
--organization                                    Organization name (O), e.g. 'My Company'
--locality                                        Locality name (L), e.g. 'Roma'
--state-or-province                               State or province name, e.g. 'Lazio'
--country                                         Country name (C), e.g. 'Italia'
--common-name                                     Common name (CN), e.g. 'localhost'
path                                              Path to the CA
================================================= =====================================================