zato ca
============================

Overview
------------

Manages a basic Certificate Authority (CA). Note that this is mostly used
to support the :doc:`zato quickstart<./quickstart>` command; it's not a full-blown CA and
there are no plans to make it a substitute for projects that actually provide
full CA environments.

Think of the Zato's CA as an aid in the development phase only. While technically possible,
it shouldn't really be used during tests and in production.

The CA works by running the `openssl <https://openssl.org/>`_ command
in subprocesses against a configuration directory.

Subcommands
------------

* :ref:`zato ca create ca<cli_zato_ca_create_ca>`
* :ref:`zato ca create lb_agent<cli_zato_ca_create_lb_agent>`
* :ref:`zato ca create server<cli_zato_ca_create_server>`
* :ref:`zato ca create web_admin<cli_zato_ca_create_web_admin>`

.. _cli_zato_ca_create_ca:

zato ca create ca
~~~~~~~~~~~~~~~~~

Creates a CA in the directory pointed to by *path*. On a successful command execution
the following directory will be created::

    path
    ├── ca-material
    ├── out-cert
    ├── out-csr
    ├── out-priv
    └── out-pub
    
================================================= ==============================================================================
Name                                              Description
================================================= ==============================================================================
ca-material                                       Stores CA's own configuration, in particular:

                                                  * ca-cert.pem - CA's certificate in PEM
                                                  * ca-certindex - an index of all the certificates issued by this CA
                                                  * ca-key.pem - CA's password-protected private key 
                                                  * ca-password - password to decrypt the private key with, in plain text.
                                                    By default, it's a `UUID4 <https://en.wikipedia.org/wiki/UUID>`_.
out-cert                                          Contains newly generated certificates
out-priv                                          Contains newly generated private keys
out-pub                                           Contains newly generated public keys
================================================= ==============================================================================

.. warning:: Newly generated private keys are not password-protected 

   The private keys a CA generates are not password-protected. This is yet another
   reason the CA is consider a development-only tool instead of a full-featured framework
   for the management of a company's digital certificates.
   
Usage
^^^^^

::

    $ zato update crypto [-h] [--store-log] [--verbose] [--store-config]
        path priv_key_path pub_key_path ca_certs_path cert_path
        
::

    $ zato update crypto ~/zato1/server1/ ~/crypto/zato.server1.priv.pem 
        ~/crypto/zato.server1.pub.pem ~/crypto/ca-cert.pem 
        ~/crypto/zato.server1.cert.pem
    $
                          
Command-specific parameters
^^^^^^^^^^^^^^^^^^^^^^^^^^^

================================================= =======================================================================
Name                                              Description
================================================= =======================================================================
path                                              Path to a Zato component
priv_key_path                                     Path to the component's private key in PEM
pub_key_path                                      Path to the component's public key in PEM
ca_certs_path                                     Path to the bundle of CA certificates the component is to trust, in PEM
cert_path                                         Path to the component's certificate in PEM
================================================= =======================================================================

.. _cli_zato_ca_create_lb_agent:

zato ca create lb_agent
~~~~~~~~~~~~~~~~~~~~~~~

.. _cli_zato_ca_create_server:

zato ca create server
~~~~~~~~~~~~~~~~~~~~~

.. _cli_zato_ca_create_web_admin:

zato ca create web_admin
~~~~~~~~~~~~~~~~~~~~~~~~

