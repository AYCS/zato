[main]
name             = English
top_level        = Config, Path, Handler, Pipeline

[config]
start            = Start: {path} from {service}
service_map      = Map service {service} to {label}

[pipeline]
pattern          = {name}: {data_type}

[path]
path              = Path: {path}
require1_else     = Require {path1} else {path2}
require2          = Require {path}
wait_sig1_enter   = Wait for signal {signal} on timeout {timeout} enter {path}
wait_sig2_invoke  = Wait for signal {signal} on timeout {timeout} invoke {service}
wait_sig3         = Wait for signal {signal}
wait_sigs1_enter  = Wait for signals {signals} on timeout {timeout} enter {service}
wait_sigs2_invoke = Wait for signals {signals} on timeout {timeout} invoke {service}
wait_sigs3        = Wait for signals {signals}
enter             = Enter {path}
fork_to_and_wait  = Fork to {fork_to} under {fork_name} and wait
fork_to           = Fork to {fork_to} under {fork_name}
if_invoke         = If {condition} invoke {service}
if_enter          = If {condition} enter {path}
else_invoke       = Else invoke {service}
else_enter        = Else enter {service}
emit              = Emit {event}
set               = Set {key} = {value}

[handler]
handler          = Handler: {handler}
invoke           = Invoke {service}
enter            = Enter {service}
ignore_signal    = Ignore signal {signal}
ignore_signals   = Ignore signals {signals}
set              = Set {key} = {value}
