[main]
name             = English
top_level        = Config, Path, Handler, Pipeline

[config]
start            = Start: {path} from {service}
service_map      = Map service {service} to {label}

[pipeline]
pattern          = {name}: {data_type}

[path]
path             = Path: {path}
require          = Require {path}
require_or       = Require {path1} or {path2}
wait_sig         = Wait for signal {signal}
wait_sig_enter   = Wait for signal {signal} on timeout {timeout} enter {path}
wait_sig_invoke  = Wait for signal {signal} on timeout {timeout} invoke {service}
wait_sigs        = Wait for signals {signals}
wait_sigs_enter  = Wait for signals {signals} on timeout {timeout} enter {service}
wait_sigs_invoke = Wait for signals {signals} on timeout {timeout} invoke {service}
enter            = Enter {path}
fork_to          = Fork to {fork_to} under {fork_name}
fork_to_and_wait = Fork to {fork_to} under {fork_name} and wait
if_invoke        = If {condition} invoke {service}
if_enter         = If {condition} enter {path}
else_invoke      = Else invoke {service}
else_enter       = Else enter {service}
emit             = Emit {event}
wait             = Wait for {signal}

[handler]
handler          = Handler: {handler}
invoke           = Invoke {service}
enter            = Enter {service}
ignore_signal    = Ignore signal {signal}
ignore_signals   = Ignore signals {signals}